---
const projects = [
  {
    id: 1,
    title: "Proyecto Principal",
    description:
      "Aplicación web completa desarrollada con tecnologías modernas",
    fullDescription:
      "Sistema completo de gestión empresarial con arquitectura moderna. Incluye autenticación, dashboard en tiempo real, gestión de usuarios y reportes avanzados. Implementado con las mejores prácticas de desarrollo.",
    tech: ["React", "Node.js", "MongoDB"],
    features: [
      "Autenticación JWT",
      "Dashboard en tiempo real",
      "API REST",
      "Base de datos NoSQL",
    ],
    status: "OPERACIONAL",
    year: "2024",
  },
  {
    id: 2,
    title: "E-commerce",
    description: "Plataforma de comercio electrónico con sistema de pagos",
    fullDescription:
      "Plataforma completa de e-commerce con carrito de compras, procesamiento de pagos, gestión de inventario y panel administrativo. Integración con múltiples pasarelas de pago.",
    tech: ["Next.js", "Stripe"],
    features: [
      "Carrito de compras",
      "Pagos seguros",
      "Gestión de inventario",
      "Panel admin",
    ],
    status: "EN DESARROLLO",
    year: "2024",
  },
  {
    id: 3,
    title: "API REST",
    description: "API robusta para gestión de datos",
    fullDescription:
      "API RESTful escalable con documentación completa, autenticación, rate limiting y monitoreo. Diseñada para soportar múltiples aplicaciones cliente.",
    tech: ["Express"],
    features: [
      "Documentación Swagger",
      "Rate limiting",
      "Autenticación",
      "Monitoreo",
    ],
    status: "COMPLETADO",
    year: "2023",
  },
  {
    id: 4,
    title: "Dashboard",
    description: "Panel de administración con métricas en tiempo real",
    fullDescription:
      "Dashboard interactivo con visualización de datos en tiempo real, gráficos dinámicos y sistema de alertas. Optimizado para análisis de rendimiento empresarial.",
    tech: ["Vue.js", "Chart.js"],
    features: [
      "Gráficos interactivos",
      "Tiempo real",
      "Sistema de alertas",
      "Exportación de datos",
    ],
    status: "OPERACIONAL",
    year: "2024",
  },
  {
    id: 5,
    title: "Mobile App",
    description: "Aplicación móvil multiplataforma",
    fullDescription:
      "Aplicación móvil nativa para iOS y Android con sincronización offline, notificaciones push y interfaz intuitiva. Optimizada para rendimiento y experiencia de usuario.",
    tech: ["React Native"],
    features: [
      "Multiplataforma",
      "Offline sync",
      "Push notifications",
      "UI/UX optimizada",
    ],
    status: "BETA",
    year: "2024",
  },
];
---

<div class="projects-container">
  <h2 class="projects-title">Proyectos</h2>
  <div class="bento-grid">
    {
      projects.map((project, index) => (
        <div
          class={`bento-item ${index === 0 ? "large" : index === 1 || index === 3 ? "medium" : "small"}`}
          data-project-id={project.id}
          onclick={`openProjectDialog(${JSON.stringify(project)})`}
        >
          <div class="project-content">
            <h3>{project.title}</h3>
            <p>{project.description}</p>
            <div class="tech-stack">
              {project.tech.map((tech) => (
                <span class="tech">{tech}</span>
              ))}
            </div>
          </div>
        </div>
      ))
    }
  </div>

  <!-- Dialog estilo Evangelion -->
  <div id="project-dialog" class="eva-dialog">
    <div class="eva-dialog-content">
      <div class="eva-header">
        <div class="eva-title-bar">
          <span class="eva-title">PROJECT DETAILS</span>
          <button class="eva-close" onclick="closeProjectDialog()">×</button>
        </div>
        <div class="eva-status-bar">
          <span class="eva-status" id="project-status">LOADING...</span>
          <span class="eva-year" id="project-year">----</span>
        </div>
      </div>

      <div class="eva-body">
        <div class="eva-section">
          <h2 class="eva-section-title" id="dialog-title">PROJECT NAME</h2>
          <p class="eva-description" id="dialog-description">
            Loading project details...
          </p>
        </div>

        <div class="eva-section">
          <h3 class="eva-subsection">TECHNICAL SPECIFICATIONS</h3>
          <div class="eva-tech-grid" id="dialog-tech">
            <!-- Tech stack will be populated here -->
          </div>
        </div>

        <div class="eva-section">
          <h3 class="eva-subsection">FEATURES</h3>
          <ul class="eva-features" id="dialog-features">
            <!-- Features will be populated here -->
          </ul>
        </div>
      </div>

      <div class="eva-footer">
        <div class="eva-scan-line"></div>
        <span class="eva-footer-text"
          >NERV SYSTEMS - PROJECT ANALYSIS COMPLETE</span
        >
      </div>
    </div>
  </div>
</div>

<style>
  .projects-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .projects-title {
    font-size: 2rem;
    font-weight: bold;
    color: #ffffff;
    text-align: center;
    margin-bottom: 2rem;
    position: relative;
    display: inline-block;
    width: 100%;
  }

  .projects-title::after {
    content: "";
    position: absolute;
    bottom: -0.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(90deg, #7fa37e, #a85772);
  }

  .bento-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, minmax(120px, 1fr));
    gap: 1rem;
    height: 100%;
    max-height: 70vh;
  }

  .bento-item {
    background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
    border-radius: 12px;
    padding: 1rem;
    border: 1px solid #333;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    min-height: 120px;
    cursor: pointer;
  }

  .bento-item:nth-child(1)::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(153, 154, 79, 0.1) 0%,
      rgba(153, 154, 79, 0.2) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .bento-item:nth-child(2)::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(168, 87, 114, 0.1) 0%,
      rgba(168, 87, 114, 0.2) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .bento-item:nth-child(3)::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(43, 100, 138, 0.1) 0%,
      rgba(43, 100, 138, 0.2) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .bento-item:nth-child(4)::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(127, 163, 126, 0.1) 0%,
      rgba(127, 163, 126, 0.2) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .bento-item:nth-child(5)::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(153, 154, 79, 0.1) 0%,
      rgba(168, 87, 114, 0.2) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .bento-item:hover::before {
    opacity: 1;
  }

  .bento-item:nth-child(1):hover {
    transform: translateY(-5px);
    border-color: #999a4f;
    box-shadow: 0 10px 30px rgba(153, 154, 79, 0.3);
  }

  .bento-item:nth-child(2):hover {
    transform: translateY(-5px);
    border-color: #a85772;
    box-shadow: 0 10px 30px rgba(168, 87, 114, 0.3);
  }

  .bento-item:nth-child(3):hover {
    transform: translateY(-5px);
    border-color: #2b648a;
    box-shadow: 0 10px 30px rgba(43, 100, 138, 0.3);
  }

  .bento-item:nth-child(4):hover {
    transform: translateY(-5px);
    border-color: #7fa37e;
    box-shadow: 0 10px 30px rgba(127, 163, 126, 0.3);
  }

  .bento-item:nth-child(5):hover {
    transform: translateY(-5px);
    border-color: #999a4f;
    box-shadow: 0 10px 30px rgba(153, 154, 79, 0.3);
  }

  .large {
    grid-column: span 2;
    grid-row: span 2;
  }

  .medium {
    grid-column: span 2;
    grid-row: span 1;
  }

  .small {
    grid-column: span 2;
    grid-row: span 1;
  }

  .project-content {
    position: relative;
    z-index: 2;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .project-content h3 {
    font-size: 1.2rem;
    font-weight: bold;
    color: #ffffff;
    margin-bottom: 0.5rem;
  }

  .project-content p {
    color: #cccccc;
    line-height: 1.4;
    margin-bottom: 0.75rem;
    font-size: 0.9rem;
  }

  .tech-stack {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: auto;
  }

  .bento-item:nth-child(1) .tech {
    background: rgba(153, 154, 79, 0.2);
    color: #999a4f;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .bento-item:nth-child(2) .tech {
    background: rgba(168, 87, 114, 0.2);
    color: #a85772;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .bento-item:nth-child(3) .tech {
    background: rgba(43, 100, 138, 0.2);
    color: #2b648a;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .bento-item:nth-child(4) .tech {
    background: rgba(127, 163, 126, 0.2);
    color: #7fa37e;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .bento-item:nth-child(5) .tech {
    background: rgba(153, 154, 79, 0.2);
    color: #999a4f;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  @media (max-width: 1024px) {
    .bento-grid {
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(3, minmax(140px, 1fr));
      max-height: 60vh;
    }

    .large {
      grid-column: span 2;
      grid-row: span 1;
    }

    .medium,
    .small {
      grid-column: span 1;
      grid-row: span 1;
    }
  }

  @media (max-width: 768px) {
    .projects-container {
      padding: 1.5rem 1rem;
    }

    .projects-title {
      font-size: 1.8rem;
      margin-bottom: 1.5rem;
    }

    .bento-grid {
      grid-template-columns: 1fr;
      grid-template-rows: repeat(5, minmax(120px, 1fr));
      gap: 0.75rem;
      max-height: 70vh;
    }

    .large,
    .medium,
    .small {
      grid-column: span 1;
      grid-row: span 1;
    }

    .bento-item {
      min-height: 120px;
      padding: 0.75rem;
    }

    .project-content h3 {
      font-size: 1.1rem;
    }

    .project-content p {
      font-size: 0.85rem;
    }
  }

  @media (max-width: 480px) {
    .projects-title {
      font-size: 1.5rem;
    }

    .bento-grid {
      max-height: 75vh;
    }

    .project-content h3 {
      font-size: 1rem;
    }

    .project-content p {
      font-size: 0.8rem;
      line-height: 1.3;
    }

    .tech {
      font-size: 0.75rem;
      padding: 0.2rem 0.5rem;
    }
  }

  /* Dialog estilo Evangelion */
  .eva-dialog {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    z-index: 1000;
    backdrop-filter: blur(5px);
  }

  .eva-dialog.active {
    display: flex;
    align-items: center;
    justify-content: center;
    animation: dialogFadeIn 0.3s ease-out;
  }

  .eva-dialog-content {
    background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 100%);
    border: 2px solid #ff6b35;
    border-radius: 0;
    width: 90%;
    max-width: 600px;
    max-height: 80vh;
    overflow-y: auto;
    font-family: "Courier New", monospace;
    box-shadow:
      0 0 20px rgba(255, 107, 53, 0.5),
      inset 0 0 20px rgba(255, 107, 53, 0.1);
    animation: dialogSlideIn 0.4s ease-out;
  }

  .eva-header {
    background: linear-gradient(90deg, #ff6b35 0%, #ff8c42 100%);
    color: #000;
    padding: 0;
  }

  .eva-title-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 1rem;
    background: rgba(0, 0, 0, 0.1);
  }

  .eva-title {
    font-weight: bold;
    font-size: 0.9rem;
    letter-spacing: 2px;
  }

  .eva-close {
    background: none;
    border: none;
    color: #000;
    font-size: 1.5rem;
    cursor: pointer;
    font-weight: bold;
    padding: 0;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .eva-close:hover {
    background: rgba(0, 0, 0, 0.2);
  }

  .eva-status-bar {
    display: flex;
    justify-content: space-between;
    padding: 0.25rem 1rem;
    font-size: 0.8rem;
    background: rgba(0, 0, 0, 0.2);
  }

  .eva-status {
    color: #00ff00;
    font-weight: bold;
  }

  .eva-year {
    color: #ffff00;
  }

  .eva-body {
    padding: 1.5rem;
    color: #fff;
  }

  .eva-section {
    margin-bottom: 1.5rem;
  }

  .eva-section-title {
    color: #ff6b35;
    font-size: 1.4rem;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    border-bottom: 1px solid #ff6b35;
    padding-bottom: 0.25rem;
  }

  .eva-subsection {
    color: #ffff00;
    font-size: 1rem;
    margin-bottom: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .eva-description {
    line-height: 1.6;
    color: #ccc;
    margin-bottom: 1rem;
  }

  .eva-tech-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .eva-tech-item {
    background: rgba(255, 107, 53, 0.1);
    border: 1px solid #ff6b35;
    padding: 0.5rem;
    text-align: center;
    color: #ff6b35;
    font-weight: bold;
    text-transform: uppercase;
    font-size: 0.8rem;
  }

  .eva-features {
    list-style: none;
    padding: 0;
  }

  .eva-features li {
    padding: 0.5rem 0;
    border-bottom: 1px solid #333;
    color: #ccc;
    position: relative;
    padding-left: 1.5rem;
  }

  .eva-features li:before {
    content: "▶";
    position: absolute;
    left: 0;
    color: #00ff00;
  }

  .eva-footer {
    background: #000;
    padding: 1rem;
    border-top: 1px solid #ff6b35;
    position: relative;
    overflow: hidden;
  }

  .eva-scan-line {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, #00ff00, transparent);
    animation: scanLine 2s linear infinite;
  }

  .eva-footer-text {
    color: #00ff00;
    font-size: 0.8rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  @keyframes dialogFadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes dialogSlideIn {
    from {
      transform: translateY(-50px) scale(0.9);
      opacity: 0;
    }
    to {
      transform: translateY(0) scale(1);
      opacity: 1;
    }
  }

  @keyframes scanLine {
    0% {
      left: -100%;
    }
    100% {
      left: 100%;
    }
  }

  @media (max-width: 768px) {
    .eva-dialog-content {
      width: 95%;
      max-height: 90vh;
    }

    .eva-body {
      padding: 1rem;
    }

    .eva-tech-grid {
      grid-template-columns: 1fr 1fr;
    }
  }
</style>
<script is:inline>
  window.openProjectDialog = function (project) {
    const dialog = document.getElementById("project-dialog");
    const title = document.getElementById("dialog-title");
    const description = document.getElementById("dialog-description");
    const status = document.getElementById("project-status");
    const year = document.getElementById("project-year");
    const techGrid = document.getElementById("dialog-tech");
    const features = document.getElementById("dialog-features");

    // Populate dialog content
    title.textContent = project.title.toUpperCase();
    description.textContent = project.fullDescription;
    status.textContent = project.status;
    year.textContent = project.year;

    // Populate tech stack
    techGrid.innerHTML = project.tech
      .map(function (techItem) {
        return '<div class="eva-tech-item">' + techItem + "</div>";
      })
      .join("");

    // Populate features
    features.innerHTML = project.features
      .map(function (feature) {
        return "<li>" + feature + "</li>";
      })
      .join("");

    // Show dialog
    dialog.classList.add("active");
    document.documentElement.style.overflow = "hidden";
    document.body.style.overflow = "hidden";
  };

  window.closeProjectDialog = function () {
    const dialog = document.getElementById("project-dialog");
    dialog.classList.remove("active");
    document.documentElement.style.overflow = "";
    document.body.style.overflow = "";
  };

  // Close dialog when clicking outside
  document.addEventListener("click", function (e) {
    const dialog = document.getElementById("project-dialog");
    if (e.target === dialog) {
      window.closeProjectDialog();
    }
  });

  // Close dialog with Escape key
  document.addEventListener("keydown", function (e) {
    if (e.key === "Escape") {
      window.closeProjectDialog();
    }
  });
</script>
